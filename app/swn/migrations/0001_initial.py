# Generated by Django 4.2 on 2023-07-26 15:02

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import djgeojson.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseRasterData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rast', django.contrib.gis.db.models.fields.RasterField(blank=True, null=True, srid=4326)),
                ('geotiff', models.FileField(upload_to='geotiffs/')),
            ],
        ),
        migrations.CreateModel(
            name='Buek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polygon_id', models.BigIntegerField()),
                ('bgl', models.CharField(blank=True, max_length=80, null=True)),
                ('symbol', models.CharField(blank=True, max_length=80, null=True)),
                ('legende', models.CharField(blank=True, max_length=200, null=True)),
                ('hinweis', models.CharField(blank=True, max_length=91, null=True)),
                ('shape_area', models.FloatField()),
                ('shape_leng', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='BuekData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polygon_id_in_buek', models.IntegerField(blank=True, null=True)),
                ('profile_id_in_polygon', models.IntegerField(blank=True, null=True)),
                ('range_percentage_of_area', models.CharField(blank=True, max_length=56, null=True)),
                ('range_percentage_minimum', models.IntegerField(blank=True, null=True)),
                ('range_percentage_maximum', models.IntegerField(blank=True, null=True)),
                ('avg_range_percentage_of_area', models.IntegerField(blank=True, null=True)),
                ('horizon_id', models.IntegerField(blank=True, null=True)),
                ('layer_depth', models.IntegerField(blank=True, null=True)),
                ('bulk_density', models.IntegerField(blank=True, null=True)),
                ('raw_density', models.IntegerField(blank=True, null=True)),
                ('soil_organic_carbon', models.FloatField(blank=True, null=True)),
                ('soil_organic_matter', models.IntegerField(blank=True, null=True)),
                ('ph', models.IntegerField(blank=True, null=True)),
                ('ka5_texture_class', models.CharField(blank=True, max_length=56, null=True)),
                ('sand', models.IntegerField(blank=True, null=True)),
                ('clay', models.IntegerField(blank=True, null=True)),
                ('silt', models.IntegerField(blank=True, null=True)),
                ('permanent_wilting_point', models.IntegerField(blank=True, null=True)),
                ('field_capacity', models.IntegerField(blank=True, null=True)),
                ('saturation', models.IntegerField(blank=True, null=True)),
                ('soil_water_conductivity_coefficient', models.IntegerField(blank=True, null=True)),
                ('sceleton', models.IntegerField(blank=True, null=True)),
                ('soil_ammonium', models.IntegerField(blank=True, null=True)),
                ('soil_nitrate', models.IntegerField(blank=True, null=True)),
                ('c_n', models.IntegerField(blank=True, null=True)),
                ('initial_soil_moisture', models.IntegerField(blank=True, null=True)),
                ('layer_description', models.CharField(blank=True, max_length=56, null=True)),
                ('is_in_groundwater', models.IntegerField(blank=True, null=True)),
                ('is_impenetrable', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='GeoData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56)),
                ('description', models.CharField(blank=True, max_length=1024)),
                ('file', models.FileField(blank=True, upload_to='geodata')),
                ('date', models.DateField(blank=True, default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='NUTS5000_N1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objid', models.CharField(max_length=16)),
                ('beginn', models.DateField()),
                ('gf', models.IntegerField()),
                ('nuts_level', models.IntegerField()),
                ('nuts_code', models.CharField(max_length=5)),
                ('nuts_name', models.CharField(max_length=100)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='NUTS5000_N2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objid', models.CharField(max_length=16)),
                ('beginn', models.DateField()),
                ('gf', models.IntegerField()),
                ('nuts_level', models.IntegerField()),
                ('nuts_code', models.CharField(max_length=5)),
                ('nuts_name', models.CharField(max_length=100)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('nuts_code_1', models.ForeignKey(default=3, on_delete=django.db.models.deletion.CASCADE, to='swn.nuts5000_n1')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='SoilProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('horizon_id', models.IntegerField(blank=True, null=True)),
                ('layer_depth', models.IntegerField(blank=True, null=True)),
                ('bulk_density', models.IntegerField(blank=True, null=True)),
                ('raw_density', models.IntegerField(blank=True, null=True)),
                ('soil_organic_carbon', models.FloatField(blank=True, null=True)),
                ('soil_organic_matter', models.IntegerField(blank=True, null=True)),
                ('ph', models.IntegerField(blank=True, null=True)),
                ('ka5_texture_class', models.CharField(blank=True, max_length=56, null=True)),
                ('sand', models.IntegerField(blank=True, null=True)),
                ('clay', models.IntegerField(blank=True, null=True)),
                ('silt', models.IntegerField(blank=True, null=True)),
                ('permanent_wilting_point', models.IntegerField(blank=True, null=True)),
                ('field_capacity', models.IntegerField(blank=True, null=True)),
                ('saturation', models.IntegerField(blank=True, null=True)),
                ('soil_water_conductivity_coefficient', models.IntegerField(blank=True, null=True)),
                ('sceleton', models.IntegerField(blank=True, null=True)),
                ('soil_ammonium', models.IntegerField(blank=True, null=True)),
                ('soil_nitrate', models.IntegerField(blank=True, null=True)),
                ('c_n', models.IntegerField(blank=True, null=True)),
                ('initial_soil_moisture', models.IntegerField(blank=True, null=True)),
                ('layer_description', models.CharField(blank=True, max_length=56, null=True)),
                ('is_in_groundwater', models.IntegerField(blank=True, null=True)),
                ('is_impenetrable', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoilProfileUserField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horizon_id', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('soil_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swn.soilprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('geom_json', djgeojson.fields.PolygonField(null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(null=True, srid=4326)),
                ('soil_profile_polygon_ids', models.JSONField(blank=True, null=True)),
                ('soil_profiles', models.ManyToManyField(blank=True, related_name='user_fields', through='swn.SoilProfileUserField', to='swn.soilprofile')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WinterSummerCrop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='UserProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('irrigation_input', models.JSONField(blank=True, null=True)),
                ('irrigation_output', models.JSONField(blank=True, null=True)),
                ('calculation_start_date', models.DateField(blank=True, null=True)),
                ('calculation_end_date', models.DateField(blank=True, null=True)),
                ('calculation', models.JSONField(blank=True, null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('crop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='swn.crop')),
                ('user_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swn.userfield')),
            ],
        ),
        migrations.AddField(
            model_name='soilprofileuserfield',
            name='user_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swn.userfield'),
        ),
        migrations.CreateModel(
            name='NUTS5000_N3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objid', models.CharField(max_length=16)),
                ('beginn', models.DateField()),
                ('gf', models.IntegerField()),
                ('nuts_level', models.IntegerField()),
                ('nuts_code', models.CharField(max_length=5)),
                ('nuts_name', models.CharField(max_length=100)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('nuts_code_2', models.ForeignKey(default=3, on_delete=django.db.models.deletion.CASCADE, to='swn.nuts5000_n2')),
            ],
        ),
    ]
