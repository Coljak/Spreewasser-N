"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path


BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATES_DIR = Path.joinpath(BASE_DIR, 'templates')
STATIC_DIR = Path.joinpath(BASE_DIR, 'static')
MEDIA_DIR = Path.joinpath(BASE_DIR, 'media')

AUTH_USER_MODEL = 'swn.User'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hl9ukq&o_m6c&^7co0-qlivgsq%f^ouhu5j(vc21sk8!xmf-h*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [  ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'django_extensions',
    'swn',
    'rest_framework',
    'rest_framework.authtoken',
    'drf_spectacular',
    'user',
    #'accounts',
    # 3rd party
    'debug_toolbar',
    'leaflet',
    'djgeojson',
    'crispy_forms',
    'crispy_bootstrap5',
    
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # 'geoip2_extras.middleware.GeoIP2Middleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR, ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'HOST': os.environ.get('DB_HOST'),
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASS'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    { #TODO change min length
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length': 4}
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'de-de'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
# STATIC_ROOT = Path.joinpath(STATIC_DIR, )
STATICFILES_DIRS = [
    STATIC_DIR,
    Path.joinpath(BASE_DIR, 'swn/static/'),
    Path.joinpath(BASE_DIR, 'swn/static/') ]
# STATICFILES_DIRS = [Path.joinpath(BASE_DIR, 'static/core')]

MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = 'media/'

LOGIN_URL = 'Login/'
LOGIN_REDIRECT_URL = 'Dashboard/'
LOGOUT_REDIRECT_URL = '/'

# for Debug Toolbar, the internal IPS are necessary
if DEBUG:
    import socket  # only if you haven't already imported this
    hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
    INTERNAL_IPS = [ip[: ip.rfind(".")] + ".1" for ip in ips] + ["127.0.0.1", "10.0.2.2"]
# INTERNAL_IPS = [
#     "127.0.0.1",
#     "0.0.0.0",
# ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#AUTH_USER_MODEL = 'swn.User'

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

# GIS Leaflet
SERIALIZATION_MODULES = {
    'geojson': 'djgeojson.serializers',
}

# LEAFLET_CONFIG = {
#     #'SRID': 4326,
#     'DEFAULT_CENTER': (52.0825, 13.8),
#     'DEFAULT_ZOOM': 10,
#     'MAX_ZOOM': 20, 
#     'MIN_ZOOM': 1,
#     'SCALE': 'both', #'metric'
#     'MINIMAP': True,
#     'RESET_VIEW': True,
#     'NO_GLOBALS': False, # adds all maps to window.maps

    
    
    
#     'ATTRIBUTION_PREFIX': 'Spreewasser:N',
#     'TILES': [('Open Street Map', 
#                 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
#                 {
#                     'attribution': '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>', 
#                     'maxZoom': 20
#                     }),
#               ('Satellit', 
#               'http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
#                {'attribution': 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community', 
#                'maxZoom': 20}),
#               ('OpenTopo Karte', 
#               'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
#                     {'attribution': 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)', 
#                     'maxZoom': 20
#                     })
#                ],
#     # 'OVERLAYS': [
#     #     ('Projectregion', serialize('geojson',ProjectRegion.objects.all()), {'attribution': 'BlaBla'}),
#     # ],
# }

# # GEOIP_PATH = os.path.join(BASE_DIR, 'geoip')

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"