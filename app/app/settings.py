"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path


BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATES_DIR = Path.joinpath(BASE_DIR, 'templates')
STATIC_DIR = Path.joinpath(BASE_DIR, 'static')
MEDIA_DIR = Path.joinpath(BASE_DIR, 'media')

# AUTH_USER_MODEL = 'user.User'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hl9ukq&o_m6c&^7co0-qlivgsq%f^ouhu5j(vc21sk8!xmf-h*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['10.10.88.182', 'spreewassern.zalf.de', '127.0.0.1', ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'django.forms',
    'django_extensions',
    'django_filters',

    'swn',
    'toolbox',
    'monica',
    'klim4cast',
    'buek',

    'rest_framework',
    'rest_framework.authtoken',
    'drf_spectacular',
    'sass_processor',
    'debug_toolbar',
    'leaflet',
    'djgeojson',
    'django_bootstrap5',
    'django_select2',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_celery_beat',
    # 'raster',
]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # 'geoip2_extras.middleware.GeoIP2Middleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR, ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'HOST': os.environ.get('DB_HOST'),
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASS'),
    }
}

GEOSERVER_URL = os.environ.get('GEOSERVER_URL')
THREDDS_URL = os.environ.get('THREDDS_URL')
THREDDS_CATALOG_XML = Path(THREDDS_URL).joinpath('catalog', 'testAll', 'data', 'DWD_SpreeWasser_N_cf_v4', 'catalog.xml')



# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {  # TODO change min length
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length': 4}
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]






# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'de' 
USE_L10N = True  # Enables localized formatting of data

TIME_ZONE = 'Europe/Berlin'
USE_TZ = True

USE_I18N = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = 'staticfiles/'
STATICFILES_DIRS = [
    STATIC_DIR,
    Path.joinpath(BASE_DIR, 'swn/static/'),
    Path.joinpath(BASE_DIR, 'monica/static/'),
    Path.joinpath(BASE_DIR, 'toolbox/static/'),
    # Path.joinpath(BASE_DIR, 'buek/static/'),
    ]

# https://pypi.org/project/django-sass-processor/
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'sass_processor.finders.CssFinder',
    
]

SASS_PROCESSOR_OPTIONS = {
    'source_map_enabled': False,
}


MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = 'media/'

LOGIN_URL = 'login/'
LOGIN_REDIRECT_URL = '/drought/'
LOGOUT_REDIRECT_URL = '/'

# for Debug Toolbar, the internal IPS are necessary
if DEBUG:
    import socket  # only if you haven't already imported this
    hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
    INTERNAL_IPS = [
        ip[: ip.rfind('.')] + '.1' for ip in ips] + ['127.0.0.1', '10.0.2.2']
# INTERNAL_IPS = [
#     '127.0.0.1',
#     '0.0.0.0',
# ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

# GIS Leaflet
SERIALIZATION_MODULES = {
    'geojson': 'djgeojson.serializers',
}

# COOKIES andd SESSIONS
SESSION_COOKIE_AGE = 1209600 # 2 weeks - is the default
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
# # Use secure cookies for better security (if using HTTPS)
# SESSION_COOKIE_SECURE = True  # Only send the cookie over HTTPS
# # Use HttpOnly to prevent JavaScript access to the cookie
# SESSION_COOKIE_HTTPONLY = True  # Prevents JavaScript access to the cookie

CRISPY_ALLOWED_TEMPLATE_PACKS = ('bootstrap5',)

CRISPY_TEMPLATE_PACK = 'bootstrap5'
CRISPY_FAIL_SILENTLY = not DEBUG


FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'

# Celery
CELERY_BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Europe/Berlin'


GEOSERVER_URL = os.environ.get("GEOSERVER_URL", "http://geoserver:8080/geoserver")
GEOSERVER_USER = os.environ.get("GEOSERVER_USER", "")
GEOSERVER_PASS = os.environ.get("GEOSERVER_PASS", "")